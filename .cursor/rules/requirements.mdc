---
alwaysApply: true
---
## Tech & Setup (IMPLEMENTED)
- Build: Vite + React + TypeScript ✅
- UI: Tailwind CSS (utility-first), CSS variables for tokens ✅
- State: Zustand ✅
- Routing: React Router ✅
- PWA: `vite-plugin-pwa` (offline & installable) ✅
- Fonts: retro/console pixel fonts (`Press Start 2P`) ✅
- Lint/Format: ESLint + TypeScript ESLint ✅
- Analytics: Vercel Analytics ✅
- i18n: KR copy only (strings centralized) ✅

---

## Product Overview (IMPLEMENTED)
- **App name:** 두뇌수련 (Brain Training) ✅
- **Home:** console-style **2-col card grid** (7 games) ✅
- **Games:**
  1) **가위바위보** – 지시문 기반 선택, 2초 타이머 ✅
  2) **순서대로 숫자 누르기** – 1부터 5까지 순서대로 누르기 ✅
  3) **인증번호 외우기** – 6자리 수 기억력 테스트 ✅
  4) **달러 암산** – `$X` → 원화로 입력 (기본 환율 1,400, 설정에서 변경 가능) ✅
  5) **평 ↔ ㎡ 환산** – 1평 = 3.3058㎡ 변환(양방향) ✅
  6) **꿈에서 할아버지가** – 숫자 기억력 + 복잡한 계산 ✅
  7) **뱅샐 유전자검사 대비 훈련장** – 반응속도 측정 ✅
  8) **2연석 찾기** – 가로/세로/대각선 2연석 찾기 (5라운드, 난이도 증가) ✅
- Each game launches a **3-10 question exam mode** (configurable) → Result screen ✅

---

## Console UI Guidelines (IMPLEMENTED)
- Palette: bg **#1C1C2A** (navy/black), fg **#E0E0E0**, accents **#FF5555 / #88FF88 / #5599FF** ✅
- Components mimic **console windows/dialog boxes**:
  - Thick pixel borders (3px), subtle inner shadow ✅
  - Focus/selection indicated by hover states (no sound) ✅
- Typography: fixed-size pixel font (Press Start 2P) ✅
- Key controls: on-screen **numeric keypad** (0–9, clear, submit), min touch 44px ✅
- Microcopy: short, encouraging, console-like prompts (KR) ✅

---

## Screens & Behaviors (IMPLEMENTED)

### 1) Home (Game Select) ✅
- Layout
  - Title bar: "두뇌수련" + 픽셀 마스코트 🧠
  - Grid(2) **GameCard** list (6 games)
  - Card fields: icon, title, short desc, [시작하기]
  - 하단: 설정 버튼 + 푸터 크레딧
- Example cards:
  - 가위바위보 – "지시문을 보고\n5초 안에 선택!"
  - 인증번호 외우기 – "6자리 수\n기억하기"
  - 달러 암산 – "$40 = ?원"
  - 평 ↔ ㎡ – "1평 = ?㎡"
  - 꿈에서 할아버지가 – "뭐라고 하셨더라?"
  - 뱅샐 유전자검사 대비 훈련장 – "3,2,1... 클릭!"
- Interaction: hover/pressed visual only; 신규/고난이도 배지 표시

### 2) Game – Exam Mode (3-10 questions) ✅
- Header: ← 홈으로 버튼 + 문제 진행도 (Q3/5) + **ProgressBar**
- Body: 문제 텍스트 (콘솔 대사창 스타일) + 문제 아이콘
- Input: **NumberInput** with **thousand separator** as typing (달러/평수 게임)
- Footer: **Keypad** (0–9, 지우기, 제출). 제출 disabled until input exists.
- Answer feedback (visual only):
  - Correct: green badge "▶ 정답입니다!"
  - Wrong: red badge "▶ 오답입니다..."
  - Show calculation rationale (e.g., `400 × 1,400 = 560,000`)
- Special features:
  - 가위바위보: 2초 타이머, 시스템 선택 표시, 지시문 기반 선택
  - 반응속도: 타이머 기반 반응속도 측정

### 3) Result ✅
- Summary: score `80점`, 맞춘 개수, optional elapsed time
- 공유 기능: "내 결과 자랑하기" (클립보드 복사)
- CTAs: [홈으로]
- 설정 진입점 (반응속도 게임 제외)

### 4) Settings ✅
- 환율 입력(숫자) - 달러 환율 설정
- 문제 개수 설정 (3/5/7/10개) - 2x2 그리드 선택
- 자동 저장 메시지

---

## Game Rules (IMPLEMENTED)

### 가위바위보 ✅
- 지시문 기반 선택 (이기지도 비기지도 말아주세요 등)
- 2초 타이머 제한
- 시스템 선택 표시 (✊✋✌️)
- 정답: 지시문에 맞는 선택

### 인증번호 외우기 ✅
- 6자리 숫자 기억력 테스트
- 숫자 표시 후 기억하여 입력

### 달러 암산 ✅
- `$X` → KRW using `exchangeRate` (default 1400, 설정에서 변경 가능)
- 천 단위 자동 포맷
- 난이도별 금액 범위:
  - 하: 10~250, 10의 배수
  - 중: 10~600, 다양한 패턴
  - 상: 15~1500, 매우 다양한 범위

### 평 ↔ ㎡ ✅
- 1평 = **3.3058㎡**
- 양방향 변환 (평→㎡, ㎡→평)
- 난이도별 소수점 처리

### 꿈에서 할아버지가 ✅
- 숫자 기억력 + 복잡한 계산
- 원본 숫자 배열 기억 후 계산

### 뱅샐 유전자검사 대비 훈련장 ✅
- 반응속도 측정
- 평균 반응시간 계산
- 타이머 기반 테스트

### 2연석 찾기 ✅
- 5라운드 구성, 각 라운드마다 난이도 증가
- 가로 2연석만 찾기 (단순화)
- 그리드 크기: 10×10 → 15×15 → 25×25 → 30×30 → 30×30
- 제한시간: 10초 → 8초 → 5초 → 3초 → 1초
- 실제 2연석을 클릭하여 찾기
- 티켓팅 방식: 2연석과 떨어져 있는 개별 셀들도 존재
- ConsoleWindow 안에서 그리드가 벗어나지 않도록 최적화
- 코드 중복 제거 및 변수 중앙 관리

---

## State & Persistence (IMPLEMENTED)
- `SettingsStore`: exchangeRate, questionCount, uiMode("grid") ✅
- `DailyQuizStore`: seed(date+difficulty), currentQuestion, answers[], score ✅
- Persistence: localStorage (settings, quiz state) ✅
- Analytics: Vercel Analytics integration ✅

---

## Data & Types (IMPLEMENTED)
```ts
type Difficulty = "easy" | "medium" | "hard";

type QuestionType = "USD_TO_KRW" | "PYEONG_TO_SQM" | "SQM_TO_PYEONG" | "VERIFICATION_CODE" | "DREAM_GRANDFATHER" | "REACTION_TIME" | "ROCK_PAPER_SCISSORS" | "NUMBER_SEQUENCE" | "TWO_IN_A_ROW";

type RockPaperScissors = "rock" | "paper" | "scissors";
type RPSPrompt = 
  | "이기지도 비기지도 말아주세요"
  | "비기지도 말고\n지지도 말아주세요"
  | "이기지도 지지도 말아주세요";

type Question = {
  id: string;
  type: QuestionType;
  prompt: string;
  icon?: string;
  answer: number;
  originalNumbers?: number[]; // 원본 숫자 배열 (DREAM_GRANDFATHER 타입용)
  format?: { 
    decimals?: number; 
    thousand?: boolean;
  };
  // 가위바위보 게임용 필드들
  systemChoice?: RockPaperScissors;
  rpsPrompt?: RPSPrompt;
  timeLimit?: number; // 5초 제한시간
};

type GameResult = {
  date: string; 
  difficulty: Difficulty;
  total: number; 
  correct: number; 
  ms?: number;
  reactionTimes?: number[]; // 반응속도 게임의 각 문제별 반응시간
  averageReactionTime?: number; // 반응속도 게임의 평균 반응시간
};

type Settings = {
  exchangeRate: number;
  difficulty: Difficulty;
  uiMode: "grid" | "menu";
  questionCount: 3 | 5 | 7 | 10;
};

type DailyQuizState = {
  seed: string;
  currentQuestion: number;
  answers: (number | null)[];
  score: number;
  startTime?: number;
  endTime?: number;
};
```

---

## Files (IMPLEMENTED)

```
src/
  App.tsx ✅
  routes/
    Home.tsx ✅
    GameDollar.tsx ✅
    GameArea.tsx ✅
    GameVerification.tsx ✅
    GameDream.tsx ✅
    GameReaction.tsx ✅
    GameNumberSequence.tsx ✅
    GameRPS.tsx ✅
    GameRPSBurning.tsx ✅
    GameTwoInARow.tsx ✅
    Result.tsx ✅
    Settings.tsx ✅
  components/
    ConsoleWindow.tsx ✅
    GameCard.tsx ✅
    NumberInput.tsx ✅
    Keypad.tsx ✅
    ProgressBar.tsx ✅
    FeedbackBadge.tsx ✅
  stores/
    settings.ts ✅
    dailyQuiz.ts ✅
  types/
    index.ts ✅
  lib/
    rng.ts ✅
    quiz/
      dollar.ts ✅
      area.ts ✅
      verification.ts ✅
      dream.ts ✅
      reaction.ts ✅
      rps.ts ✅
    format.ts ✅
    gameCalculators/
      index.ts ✅
  index.css ✅
```

---

## Implementation Notes (IMPLEMENTED)

* ✅ Keep **pure functions** for question generation (seeded RNG) and formatting
* ✅ Thousand separator: format only for view; keep numeric value canonical
* ✅ All interactive elements meet 44px touch min; keyboard/focus a11y
* ✅ No audio APIs, no vibration API usage
* ✅ Mobile-first responsive design (355px 최적화)
* ✅ PWA with offline support
* ✅ Vercel Analytics integration
* ✅ Zustand state management with persistence

---

## Acceptance Criteria (ALL COMPLETED)

* ✅ Home shows **console-style** selection (2-col grid) with 8 games
* ✅ Each game runs **3-10 questions** (configurable) with progress and keypad input
* ✅ Visual-only feedback (correct/wrong + rationale), **no sound/vibration**
* ✅ Settings persist; exchange rate affects dollar quiz; question count works
* ✅ Daily deterministic sets via seed; results saved to localStorage
* ✅ PWA installable; app shell works offline after first load
* ✅ UI follows console window/dialog look & retro font & palette tokens
* ✅ Mobile optimization for 355px and smaller screens
* ✅ Analytics tracking for game starts and completions

---

## Non-Goals (MVP) - RESPECTED

* ✅ No backend, no authentication, no analytics (except Vercel)
* ✅ No leaderboard/social (except share feature)
* ✅ No audio/rumble effects

---

## Current Features & Capabilities

### 🎮 Games
1. **가위바위보** - 지시문 기반 선택 게임
2. **순서대로 숫자 누르기** - 1부터 5까지 순서대로 누르기
3. **인증번호 외우기** - 숫자 기억력 테스트
4. **달러 암산** - 환율 계산 게임
5. **평수 변환** - 면적 단위 변환
6. **꿈에서 할아버지가** - 복합 기억력 게임
7. **뱅샐 유전자검사 대비 훈련장** - 반응속도 측정
8. **2연석 찾기** - 가로/세로/대각선 2연석 찾기 (5라운드, 난이도 증가)

### ⚙️ Settings
- 환율 설정 (달러→원화)
- 문제 개수 설정 (3/5/7/10개)
- 자동 저장

### 📱 Technical Features
- PWA (Progressive Web App)
- Offline support
- Mobile optimized (355px)
- Touch-friendly UI
- Vercel Analytics
- Zustand state management
- LocalStorage persistence

### 🎨 UI/UX
- Console game aesthetic
- Press Start 2P font
- Pixel art borders
- Retro color palette
- Responsive design
- Accessibility support


4. Wire Home → Game flows, 10Q loop, per-question feedback, Result.
5. Settings (exchangeRate, difficulty, area precision) + persistence.
6. PWA config + offline testing; a11y focus/roles pass.

- 코드를 작업하고 나서는 항상 requirements.mdc를 업데이트하세요.
- 코드를 작업하고 나서는 항상 `npm run build`를 실행해 제대로 동작하는지 확인하세요.

